# Define global image for all jobs
image: cypress/base:16.14.2-slim

# Define stages
stages:
  - build
  - test
  - report

# Cache npm modules and Cypress binary for performance
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - node_modules
    - cache/Cypress

# Install dependencies and prepare for the tests
install_dependencies:
  stage: build
  script:
    # Install necessary dependencies for the build stage
    - npm ci
    - npm install mochawesome-merge marge --save-dev
    # Print debug info (Cypress binary path, cache list)
    - npx cypress cache path
    - npx cypress cache list

# Run the tests and store Cypress videos, screenshots, and reports
test:
  stage: test
  parallel: 3  # Run tests in parallel
  script:
    - npm ci  # Install dependencies
    - npm install mochawesome-merge marge --save-dev
    - npx @bahmutov/print-env CI_
    - npx cypress run --env split=true  # Run Cypress tests
  artifacts:
    paths:
      - cypress/videos/**/*  # Store Cypress videos
      - cypress/screenshots/**/*  # Store screenshots
      - cypress/results/**/*  # Store JSON reports
    expire_in: 1 hour  # Set expiration for artifacts

# Generate the final Mochawesome report
report:
  stage: report
  needs:
    - job: test  # Ensure tests finish before generating the report
      artifacts: true
  script:
    # Install dependencies for the report stage
    - npm ci
    - npm install mochawesome-merge marge --save-dev
    # Install zip utility
    - apt-get update && apt-get install -y zip
    # Merge and generate the final report
    - mkdir mochawesome
    - mkdir -p mochawesome/screenshots mochawesome/videos mochawesome/results
    - cp -r cypress/screenshots/* mochawesome/screenshots || true
    - cp -r cypress/videos/* mochawesome/videos || true
    - cp -r cypress/results/* mochawesome/results || true
    - npx mochawesome-merge mochawesome/results/*.json -o mochawesome/results/merged.json
    - npx marge mochawesome/results/merged.json --charts true --showHooks always --reportDir mochawesome/results --reportFilename index.html
    - cd mochawesome
    - zip -r ../mochawesome_results.zip .  
    # Zip the final report
    #- zip -r mochawesome_results.zip mochawesome
  artifacts:
    when: always
    expire_in: 1 hour
    paths:
      - mochawesome_results.zip  # Store the final zipped report
