pipeline {
    agent any

    tools {
        nodejs "nodejs"
    }

    environment {
        JENKINS_URL = 'http://localhost:8080'
        // Correct job name to 'Cypress@4' and use %20 for space
        MOCHA_ZIP_URL = "${JENKINS_URL}/job/Cypress@4/${env.BUILD_NUMBER}/artifact/Mochawesome%20Report.zip"
        // Local file retains the original filename with space (quoted in shell commands)
        LOCAL_ZIP_FILE = "${WORKSPACE}/Mochawesome Report.zip"
        HTML_REPORT_DIR = "${WORKSPACE}/cypress/reports/mochawesome"
    }

    stages {
        stage('Run Tests') {
            steps {
                script {
                    sh '''
                        npm install
                        npm run cy:run-report  # Ensure this generates 'Mochawesome Report.zip'
                    '''
                    // Archive the ZIP file generated by the tests
                    archiveArtifacts artifacts: 'Mochawesome Report.zip', allowEmptyArchive: false
                }
            }
        }

        stage('Download, Unzip, and Open Report') {
            steps {
                script {
                    // Download with correct URL and handle spaces with quotes
                    sh "curl -L '${env.MOCHA_ZIP_URL}' -o '${env.LOCAL_ZIP_FILE}'"
                    // Unzip with quotes to handle spaces in filenames
                    sh "unzip -o '${env.LOCAL_ZIP_FILE}' -d '${env.HTML_REPORT_DIR}'"
                    
                    def reportExists = fileExists("${env.HTML_REPORT_DIR}/Cypress_HTML_Report.html")
                    if (!reportExists) {
                        error "HTML report not found in ${env.HTML_REPORT_DIR}"
                    }
                }
            }
        }

        stage('Publish HTML Report') {
            steps {
                publishHTML([
                    reportName: 'Mochawesome Report',
                    reportDir: "${env.HTML_REPORT_DIR}",
                    reportFiles: 'Cypress_HTML_Report.html',
                    keepAll: true,
                    allowMissing: false
                ])
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
        success {
            echo 'Tests passed!'
        }
        failure {
            echo 'Tests failed!'
        }
    }
}
